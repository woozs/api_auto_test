{"name": "test_server_snap[case_data0]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testcase.test_08_server_snap.Test_Server_Snap object at 0x04E90830>\ncase_data = {'address': '/v2/${project_id}$/servers/${server_id}$/action', 'check': [{'check_type': 'json', 'datebase': None, 'exp...file': False, 'headers': {'Content-Type': 'application/json', 'X-Auth-Token': '5900a77359a949cea655efbe4de5bf12'}, ...}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"])\n    @allure.story(\"虚拟机快照\")\n    def test_server_snap(self,case_data):\n    \n        # 参数化修改test_add_project 注释\n        for k, v in enumerate(case_dict[\"test_case\"]):  # 遍历用例文件中所有用例的索引和值\n            try:\n                if case_data == v:\n                    # 修改方法的__doc__在下一次调用时生效，此为展示在报告中的用例描述\n                    Test_Server_Snap.test_server_snap.__doc__ = case_dict[\"test_case\"][k + 1][\"info\"]\n            except IndexError:\n                pass\n    \n        if not self.result[\"result\"]:\n            # 查看类变量result的值，如果未False，则前一接口校验错误，此接口标记未失败，节约测试时间\n            pytest.xfail(\"前置接口测试失败，此接口标记为失败\")\n    \n        #send_request(_data, _host, _address,_port, _relevance, path, _success)\n        code, data = requestSend.send_request(case_data, case_dict[\"testinfo\"].get(\"host\"),\n                                              case_dict[\"testinfo\"].get(\"address\"),str(case_dict[\"testinfo\"].get(\"port\")), self.relevance, CASE_PATH, self.result)\n        expected_code = case_data[\"check\"][0][\"expected_code\"]\n>       self.Assert.assert_code(code,expected_code)\n\ntestcase\\test_08_server_snap.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Common.Assert.Assertions object at 0x05763630>, code = 409\nexpected_code = 202\n\n    def assert_code(self, code, expected_code):\n        \"\"\"\n        验证response状态码\n        :param code:\n        :param expected_code:\n        :return:\n        \"\"\"\n        try:\n>           assert code == expected_code\nE           AssertionError\n\nCommon\\Assert.py:30: AssertionError"}, "steps": [{"name": "POST请求接口", "status": "passed", "attachments": [{"name": "创建云主机快照", "source": "3be5a2fa-82c3-42e9-a906-83693afbfc92-attachment.attach"}, {"name": "http://192.168.54.120:8774/v2/623116cf4d274453ba803e753fda2e69/servers/952e41e1-bf51-4648-af18-d59ca5d83557/action", "source": "517f2299-6796-4c0e-9fe6-904e006d1acc-attachment.attach"}, {"name": "{'Content-Type': 'application/json', 'X-Auth-Token': '5900a77359a949cea655efbe4de5bf12'}", "source": "14a512b1-c7cb-4087-9bc2-78f78826d1e9-attachment.attach"}, {"name": "{'createImage': {'name': 'snap_8JkrX4yjSduLBPHcmTxC'}}", "source": "b13b26f8-26f3-4e6f-ba7f-9ed4c87d58f8-attachment.attach"}], "start": 1572783749990, "stop": 1572783749996}], "attachments": [{"name": "log", "source": "5d3c0071-8a74-4a19-adb3-d7aefbdcc051-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_data", "value": "{'test_name': '创建云主机快照', 'info': '创建云主机快照', 'http_type': 'http', 'request_type': 'post', 'parameter_type': 'raw', 'address': '/v2/${project_id}$/servers/${server_id}$/action', 'headers': {'Content-Type': 'application/json', 'X-Auth-Token': '${token_id}$'}, 'timeout': 20, 'parameter': {'createImage': {'name': '${server_snap_name}$'}}, 'file': False, 'check': [{'check_type': 'json', 'datebase': None, 'expected_code': 202, 'expected_request': {}}], 'relevance': None}"}], "start": 1572783749985, "stop": 1572783750463, "uuid": "a20a8ac0-7c4a-4ad9-a519-b809d837ae07", "historyId": "f31e74c09fda1bed729617e55cc740d3", "testCaseId": "dcf8a32a809c2e0f15d751ad0576cc58", "fullName": "testcase.test_08_server_snap.Test_Server_Snap#test_server_snap", "labels": [{"name": "story", "value": "虚拟机快照"}, {"name": "feature", "value": "创建云主机快照"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_08_server_snap"}, {"name": "subSuite", "value": "Test_Server_Snap"}, {"name": "host", "value": "wuzs"}, {"name": "thread", "value": "18680-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_08_server_snap"}]}