{
  "uid" : "2ddca769f23f40c2",
  "name" : "test_server[case_data1]",
  "fullName" : "testcase.test_04_server.Test_Server#test_server",
  "historyId" : "1aa6cfff5540492f97d7ee230c36e40f",
  "time" : {
    "start" : 1572784103487,
    "stop" : 1572784143699,
    "duration" : 40212
  },
  "description" : "查询虚拟机",
  "descriptionHtml" : "<p>查询虚拟机</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: JSON格式校验，关键字 ACTIVE 不在返回结果 {'status': 'BUILD', 'updated': '2019-11-03T12:27:30Z', 'hostId': '7c9bedaf803700c0381862599dfcf3a147d9a9abf5002bd51200f8cd', 'OS-EXT-SRV-ATTR:host': 'node-3.domain.tld', 'addresses': {}, 'links': [{'href': 'http://192.168.54.120:8774/v2/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'self'}, {'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'bookmark'}], 'key_name': None, 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/images/b4e9e907-686e-440d-bc1a-d73a8decfa54', 'rel': 'bookmark'}]}, 'OS-EXT-STS:task_state': 'spawning', 'OS-EXT-STS:vm_state': 'building', 'OS-EXT-SRV-ATTR:instance_name': 'instance-00000210', 'OS-SRV-USG:launched_at': None, 'OS-EXT-SRV-ATTR:hypervisor_hostname': 'domain-c9.eede1695-14f7-4317-97ae-3e1488245fa9', 'flavor': {'id': 'flavor-1-1-1', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/flavors/flavor-1-1-1', 'rel': 'bookmark'}]}, 'id': 'd1a9af77-3a5e-406d-b073-9c5297cebdb5', 'security_groups': [{'name': 'default'}], 'OS-SRV-USG:terminated_at': None, 'OS-EXT-AZ:availability_zone': 'nova', 'user_id': '0ec82b7380cb4d0c80058501938cdf48', 'name': 'wuzs_YLyIxCNOTVvow0QDun3t', 'created': '2019-11-03T12:27:29Z', 'tenant_id': '72695eb0907c49a8bdc61419202f93f0', 'OS-DCF:diskConfig': 'MANUAL', 'os-extended-volumes:volumes_attached': [], 'accessIPv4': '', 'accessIPv6': '', 'progress': 0, 'OS-EXT-STS:power_state': 0, 'config_drive': '', 'metadata': {}}",
  "statusTrace" : "self = <testcase.test_04_server.Test_Server object at 0x04F80050>\ncase_data = {'address': '/v2/${project_id}$/servers/${server_id}$', 'check': [{'check_type': 'json', 'datebase': None, 'expected_c...file': False, 'headers': {'Content-Type': 'application/json', 'X-Auth-Token': '5628bf6db6004b1b881403dcb10c109d'}, ...}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"])\n    @allure.story(\"虚拟机\")\n    @pytest.mark.flaky(reruns=3)\n    def test_server(self,case_data):\n        for k, v in enumerate(case_dict[\"test_case\"]):  # 遍历用例文件中所有用例的索引和值\n            try:\n                if case_data == v:\n                    # 修改方法的__doc__在下一次调用时生效，此为展示在报告中的用例描述\n                    Test_Server.test_server.__doc__ = case_dict[\"test_case\"][k + 1][\"info\"]\n            except IndexError:\n                pass\n    \n        if not self.result[\"result\"]:\n            # 查看类变量result的值，如果未False，则前一接口校验错误，此接口标记未失败，节约测试时间\n            pytest.xfail(\"前置接口测试失败，此接口标记为失败\")\n    \n        #send_request(_data, _host, _address,_port, _relevance, path, _success)\n        code, data = requestSend.send_request(case_data, case_dict[\"testinfo\"].get(\"host\"),\n                                              case_dict[\"testinfo\"].get(\"address\"),str(case_dict[\"testinfo\"].get(\"port\")), self.relevance, CASE_PATH, self.result)\n        expected_code = case_data[\"check\"][0][\"expected_code\"]\n        server_id = data[\"server\"][\"id\"]\n        self.Assert.assert_code(code,expected_code)\n    \n        if case_data[\"request_type\"] == \"post\":\n            self.log.info(\"保存server_id到全局配置文件\")\n            conf =Config()\n            conf.set_conf(\"test_data\",\"server_id\",server_id)\n        if case_data[\"sleep_time\"] :\n            self.log.info(\"虚拟机已创建，等待创建........\")\n            time.sleep(case_data[\"sleep_time\"])\n    \n        # self.log.debug(\"data:%s\"%data)\n    \n        CheckResult.check(case_data[\"test_name\"], case_data[\"check\"][0], code, data, self.relevance, CASE_PATH,\n>                         self.result)\n\ntestcase\\test_04_server.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\CheckResult.py:49: in check\n    CheckJson.check_json(expected_request, data, success)\nCommon\\CheckJson.py:42: in check_json\n    check_json(src_data[this_key], dst_data[this_key], success)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc_data = {'OS-EXT-STS:vm_state': 'active', 'flavor': {'id': 'flavor-1-1-1'}, 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54'}, 'status': 'ACTIVE', ...}\ndst_data = {'OS-DCF:diskConfig': 'MANUAL', 'OS-EXT-AZ:availability_zone': 'nova', 'OS-EXT-SRV-ATTR:host': 'node-3.domain.tld', 'OS-EXT-SRV-ATTR:hypervisor_hostname': 'domain-c9.eede1695-14f7-4317-97ae-3e1488245fa9', ...}\nsuccess = {'result': False}\n\n    def check_json(src_data, dst_data, success):\n        \"\"\"\n        校验的json\n        :param src_data:  校验内容\n        :param dst_data:  接口返回的数据（被校验的内容)\n        :param success:  全局测试结果\n        :return:\n        \"\"\"\n        global result\n    \n        if isinstance(src_data, dict):\n            # 若为dict格式\n            for key  in src_data:\n    \n                if key not in dst_data:\n                    success[\"result\"] = False\n                    raise failureException(\"JSON格式校验，关键字 %s 不在返回结果 %s\" % (key, dst_data))\n    \n                elif  type(src_data[key]) is not dict and src_data[key]  != dst_data[key]:\n                    value = src_data[key]\n    \n                    success[\"result\"] = False\n>                   raise failureException(\"JSON格式校验，关键字 %s 不在返回结果 %s\" % (value, dst_data))\nE                   AssertionError: JSON格式校验，关键字 ACTIVE 不在返回结果 {'status': 'BUILD', 'updated': '2019-11-03T12:27:30Z', 'hostId': '7c9bedaf803700c0381862599dfcf3a147d9a9abf5002bd51200f8cd', 'OS-EXT-SRV-ATTR:host': 'node-3.domain.tld', 'addresses': {}, 'links': [{'href': 'http://192.168.54.120:8774/v2/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'self'}, {'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'bookmark'}], 'key_name': None, 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/images/b4e9e907-686e-440d-bc1a-d73a8decfa54', 'rel': 'bookmark'}]}, 'OS-EXT-STS:task_state': 'spawning', 'OS-EXT-STS:vm_state': 'building', 'OS-EXT-SRV-ATTR:instance_name': 'instance-00000210', 'OS-SRV-USG:launched_at': None, 'OS-EXT-SRV-ATTR:hypervisor_hostname': 'domain-c9.eede1695-14f7-4317-97ae-3e1488245fa9', 'flavor': {'id': 'flavor-1-1-1', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/flavors/flavor-1-1-1', 'rel': 'bookmark'}]}, 'id': 'd1a9af77-3a5e-406d-b073-9c5297cebdb5', 'security_groups': [{'name': 'default'}], 'OS-SRV-USG:terminated_at': None, 'OS-EXT-AZ:availability_zone': 'nova', 'user_id': '0ec82b7380cb4d0c80058501938cdf48', 'name': 'wuzs_YLyIxCNOTVvow0QDun3t', 'created': '2019-11-03T12:27:29Z', 'tenant_id': '72695eb0907c49a8bdc61419202f93f0', 'OS-DCF:diskConfig': 'MANUAL', 'os-extended-volumes:volumes_attached': [], 'accessIPv4': '', 'accessIPv6': '', 'progress': 0, 'OS-EXT-STS:power_state': 0, 'config_drive': '', 'metadata': {}}\n\nCommon\\CheckJson.py:36: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1572784101614,
      "stop" : 1572784101833,
      "duration" : 219
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "查询虚拟机",
    "status" : "failed",
    "statusMessage" : "AssertionError: JSON格式校验，关键字 ACTIVE 不在返回结果 {'status': 'BUILD', 'updated': '2019-11-03T12:27:30Z', 'hostId': '7c9bedaf803700c0381862599dfcf3a147d9a9abf5002bd51200f8cd', 'OS-EXT-SRV-ATTR:host': 'node-3.domain.tld', 'addresses': {}, 'links': [{'href': 'http://192.168.54.120:8774/v2/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'self'}, {'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'bookmark'}], 'key_name': None, 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/images/b4e9e907-686e-440d-bc1a-d73a8decfa54', 'rel': 'bookmark'}]}, 'OS-EXT-STS:task_state': 'spawning', 'OS-EXT-STS:vm_state': 'building', 'OS-EXT-SRV-ATTR:instance_name': 'instance-00000210', 'OS-SRV-USG:launched_at': None, 'OS-EXT-SRV-ATTR:hypervisor_hostname': 'domain-c9.eede1695-14f7-4317-97ae-3e1488245fa9', 'flavor': {'id': 'flavor-1-1-1', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/flavors/flavor-1-1-1', 'rel': 'bookmark'}]}, 'id': 'd1a9af77-3a5e-406d-b073-9c5297cebdb5', 'security_groups': [{'name': 'default'}], 'OS-SRV-USG:terminated_at': None, 'OS-EXT-AZ:availability_zone': 'nova', 'user_id': '0ec82b7380cb4d0c80058501938cdf48', 'name': 'wuzs_YLyIxCNOTVvow0QDun3t', 'created': '2019-11-03T12:27:29Z', 'tenant_id': '72695eb0907c49a8bdc61419202f93f0', 'OS-DCF:diskConfig': 'MANUAL', 'os-extended-volumes:volumes_attached': [], 'accessIPv4': '', 'accessIPv6': '', 'progress': 0, 'OS-EXT-STS:power_state': 0, 'config_drive': '', 'metadata': {}}",
    "statusTrace" : "self = <testcase.test_04_server.Test_Server object at 0x04F80050>\ncase_data = {'address': '/v2/${project_id}$/servers/${server_id}$', 'check': [{'check_type': 'json', 'datebase': None, 'expected_c...file': False, 'headers': {'Content-Type': 'application/json', 'X-Auth-Token': '5628bf6db6004b1b881403dcb10c109d'}, ...}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"])\n    @allure.story(\"虚拟机\")\n    @pytest.mark.flaky(reruns=3)\n    def test_server(self,case_data):\n        for k, v in enumerate(case_dict[\"test_case\"]):  # 遍历用例文件中所有用例的索引和值\n            try:\n                if case_data == v:\n                    # 修改方法的__doc__在下一次调用时生效，此为展示在报告中的用例描述\n                    Test_Server.test_server.__doc__ = case_dict[\"test_case\"][k + 1][\"info\"]\n            except IndexError:\n                pass\n    \n        if not self.result[\"result\"]:\n            # 查看类变量result的值，如果未False，则前一接口校验错误，此接口标记未失败，节约测试时间\n            pytest.xfail(\"前置接口测试失败，此接口标记为失败\")\n    \n        #send_request(_data, _host, _address,_port, _relevance, path, _success)\n        code, data = requestSend.send_request(case_data, case_dict[\"testinfo\"].get(\"host\"),\n                                              case_dict[\"testinfo\"].get(\"address\"),str(case_dict[\"testinfo\"].get(\"port\")), self.relevance, CASE_PATH, self.result)\n        expected_code = case_data[\"check\"][0][\"expected_code\"]\n        server_id = data[\"server\"][\"id\"]\n        self.Assert.assert_code(code,expected_code)\n    \n        if case_data[\"request_type\"] == \"post\":\n            self.log.info(\"保存server_id到全局配置文件\")\n            conf =Config()\n            conf.set_conf(\"test_data\",\"server_id\",server_id)\n        if case_data[\"sleep_time\"] :\n            self.log.info(\"虚拟机已创建，等待创建........\")\n            time.sleep(case_data[\"sleep_time\"])\n    \n        # self.log.debug(\"data:%s\"%data)\n    \n        CheckResult.check(case_data[\"test_name\"], case_data[\"check\"][0], code, data, self.relevance, CASE_PATH,\n>                         self.result)\n\ntestcase\\test_04_server.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nCommon\\CheckResult.py:49: in check\n    CheckJson.check_json(expected_request, data, success)\nCommon\\CheckJson.py:42: in check_json\n    check_json(src_data[this_key], dst_data[this_key], success)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc_data = {'OS-EXT-STS:vm_state': 'active', 'flavor': {'id': 'flavor-1-1-1'}, 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54'}, 'status': 'ACTIVE', ...}\ndst_data = {'OS-DCF:diskConfig': 'MANUAL', 'OS-EXT-AZ:availability_zone': 'nova', 'OS-EXT-SRV-ATTR:host': 'node-3.domain.tld', 'OS-EXT-SRV-ATTR:hypervisor_hostname': 'domain-c9.eede1695-14f7-4317-97ae-3e1488245fa9', ...}\nsuccess = {'result': False}\n\n    def check_json(src_data, dst_data, success):\n        \"\"\"\n        校验的json\n        :param src_data:  校验内容\n        :param dst_data:  接口返回的数据（被校验的内容)\n        :param success:  全局测试结果\n        :return:\n        \"\"\"\n        global result\n    \n        if isinstance(src_data, dict):\n            # 若为dict格式\n            for key  in src_data:\n    \n                if key not in dst_data:\n                    success[\"result\"] = False\n                    raise failureException(\"JSON格式校验，关键字 %s 不在返回结果 %s\" % (key, dst_data))\n    \n                elif  type(src_data[key]) is not dict and src_data[key]  != dst_data[key]:\n                    value = src_data[key]\n    \n                    success[\"result\"] = False\n>                   raise failureException(\"JSON格式校验，关键字 %s 不在返回结果 %s\" % (value, dst_data))\nE                   AssertionError: JSON格式校验，关键字 ACTIVE 不在返回结果 {'status': 'BUILD', 'updated': '2019-11-03T12:27:30Z', 'hostId': '7c9bedaf803700c0381862599dfcf3a147d9a9abf5002bd51200f8cd', 'OS-EXT-SRV-ATTR:host': 'node-3.domain.tld', 'addresses': {}, 'links': [{'href': 'http://192.168.54.120:8774/v2/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'self'}, {'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'bookmark'}], 'key_name': None, 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/images/b4e9e907-686e-440d-bc1a-d73a8decfa54', 'rel': 'bookmark'}]}, 'OS-EXT-STS:task_state': 'spawning', 'OS-EXT-STS:vm_state': 'building', 'OS-EXT-SRV-ATTR:instance_name': 'instance-00000210', 'OS-SRV-USG:launched_at': None, 'OS-EXT-SRV-ATTR:hypervisor_hostname': 'domain-c9.eede1695-14f7-4317-97ae-3e1488245fa9', 'flavor': {'id': 'flavor-1-1-1', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/flavors/flavor-1-1-1', 'rel': 'bookmark'}]}, 'id': 'd1a9af77-3a5e-406d-b073-9c5297cebdb5', 'security_groups': [{'name': 'default'}], 'OS-SRV-USG:terminated_at': None, 'OS-EXT-AZ:availability_zone': 'nova', 'user_id': '0ec82b7380cb4d0c80058501938cdf48', 'name': 'wuzs_YLyIxCNOTVvow0QDun3t', 'created': '2019-11-03T12:27:29Z', 'tenant_id': '72695eb0907c49a8bdc61419202f93f0', 'OS-DCF:diskConfig': 'MANUAL', 'os-extended-volumes:volumes_attached': [], 'accessIPv4': '', 'accessIPv6': '', 'progress': 0, 'OS-EXT-STS:power_state': 0, 'config_drive': '', 'metadata': {}}\n\nCommon\\CheckJson.py:36: AssertionError",
    "steps" : [ {
      "name" : "GET请求接口",
      "time" : {
        "start" : 1572784103491,
        "stop" : 1572784103496,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "1b054dbb891100c3",
        "name" : "查看虚拟机",
        "source" : "1b054dbb891100c3.attach",
        "type" : "text/plain",
        "size" : 15
      }, {
        "uid" : "39da49e5fc9d957d",
        "name" : "http://192.168.54.120:8774/v2/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5",
        "source" : "39da49e5fc9d957d.attach",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "e4fe66b79a54060",
        "name" : "{'Content-Type': 'application/json', 'X-Auth-Token': '5628bf6db6004b1b881403dcb10c109d'}",
        "source" : "e4fe66b79a54060.attach",
        "type" : "text/plain",
        "size" : 9
      }, {
        "uid" : "ca32afe277f012d5",
        "name" : "{'server': {'admin_state_up': True, 'name': 'FxWdtzaUgpj2Drs37GJC_netwrok', 'tenant_id': '72695eb0907c49a8bdc61419202f93f0'}}",
        "source" : "ca32afe277f012d5.attach",
        "type" : "text/plain",
        "size" : 12
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 4,
      "shouldDisplayMessage" : false
    }, {
      "name" : "JSON格式校验",
      "time" : {
        "start" : 1572784143694,
        "stop" : 1572784143699,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e964f0360699489b",
        "name" : "200",
        "source" : "e964f0360699489b.attach",
        "type" : "text/plain",
        "size" : 10
      }, {
        "uid" : "93af0d0c742edfac",
        "name" : "{'server': {'status': 'ACTIVE', 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54'}, 'OS-EXT-STS:vm_state': 'active', 'flavor': {'id': 'flavor-1-1-1'}, 'tenant_id': '72695eb0907c49a8bdc61419202f93f0'}}",
        "source" : "93af0d0c742edfac.attach",
        "type" : "text/plain",
        "size" : 10
      }, {
        "uid" : "75c09076999d90a3",
        "name" : "200",
        "source" : "75c09076999d90a3.attach",
        "type" : "text/plain",
        "size" : 10
      }, {
        "uid" : "924acf39993817eb",
        "name" : "{'server': {'status': 'BUILD', 'updated': '2019-11-03T12:27:30Z', 'hostId': '7c9bedaf803700c0381862599dfcf3a147d9a9abf5002bd51200f8cd', 'OS-EXT-SRV-ATTR:host': 'node-3.domain.tld', 'addresses': {}, 'links': [{'href': 'http://192.168.54.120:8774/v2/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'self'}, {'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/servers/d1a9af77-3a5e-406d-b073-9c5297cebdb5', 'rel': 'bookmark'}], 'key_name': None, 'image': {'id': 'b4e9e907-686e-440d-bc1a-d73a8decfa54', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/images/b4e9e907-686e-440d-bc1a-d73a8decfa54', 'rel': 'bookmark'}]}, 'OS-EXT-STS:task_state': 'spawning', 'OS-EXT-STS:vm_state': 'building', 'OS-EXT-SRV-ATTR:instance_name': 'instance-00000210', 'OS-SRV-USG:launched_at': None, 'OS-EXT-SRV-ATTR:hypervisor_hostname': 'domain-c9.eede1695-14f7-4317-97ae-3e1488245fa9', 'flavor': {'id': 'flavor-1-1-1', 'links': [{'href': 'http://192.168.54.120:8774/72695eb0907c49a8bdc61419202f93f0/flavors/flavor-1-1-1', 'rel': 'bookmark'}]}, 'id': 'd1a9af77-3a5e-406d-b073-9c5297cebdb5', 'security_groups': [{'name': 'default'}], 'OS-SRV-USG:terminated_at': None, 'OS-EXT-AZ:availability_zone': 'nova', 'user_id': '0ec82b7380cb4d0c80058501938cdf48', 'name': 'wuzs_YLyIxCNOTVvow0QDun3t', 'created': '2019-11-03T12:27:29Z', 'tenant_id': '72695eb0907c49a8bdc61419202f93f0', 'OS-DCF:diskConfig': 'MANUAL', 'os-extended-volumes:volumes_attached': [], 'accessIPv4': '', 'accessIPv6': '', 'progress': 0, 'OS-EXT-STS:power_state': 0, 'config_drive': '', 'metadata': {}}}",
        "source" : "924acf39993817eb.attach",
        "type" : "text/plain",
        "size" : 10
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 4,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "4eab58f7f91e5789",
      "name" : "log",
      "source" : "4eab58f7f91e5789.txt",
      "type" : "text/plain",
      "size" : 4731
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 9,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1572784143728,
      "stop" : 1572784143728,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "虚拟机"
  }, {
    "name" : "feature",
    "value" : "创建虚拟机"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_04_server"
  }, {
    "name" : "subSuite",
    "value" : "Test_Server"
  }, {
    "name" : "host",
    "value" : "wuzs"
  }, {
    "name" : "thread",
    "value" : "15108-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_04_server"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_data",
    "value" : "{'test_name': '查看虚拟机', 'sleep_time': 40, 'info': '查询虚拟机', 'http_type': 'http', 'request_type': 'get', 'parameter_type': 'raw', 'address': '/v2/${project_id}$/servers/${server_id}$', 'headers': {'Content-Type': 'application/json', 'X-Auth-Token': '${token_id}$'}, 'timeout': 20, 'parameter': {'server': {'admin_state_up': True, 'name': '${network_name}$', 'tenant_id': '${project_id}$'}}, 'file': False, 'check': [{'check_type': 'json', 'datebase': None, 'expected_code': 200, 'expected_request': 'server_result.json'}], 'relevance': None}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "2ddca769f23f40c2.json",
  "parameterValues" : [ "{'test_name': '查看虚拟机', 'sleep_time': 40, 'info': '查询虚拟机', 'http_type': 'http', 'request_type': 'get', 'parameter_type': 'raw', 'address': '/v2/${project_id}$/servers/${server_id}$', 'headers': {'Content-Type': 'application/json', 'X-Auth-Token': '${token_id}$'}, 'timeout': 20, 'parameter': {'server': {'admin_state_up': True, 'name': '${network_name}$', 'tenant_id': '${project_id}$'}}, 'file': False, 'check': [{'check_type': 'json', 'datebase': None, 'expected_code': 200, 'expected_request': 'server_result.json'}], 'relevance': None}" ]
}